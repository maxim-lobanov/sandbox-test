name: Check Hostname

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  check-hostname:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]

    steps:
      - uses: actions/checkout@v3

      #- run: |
      #    $netip = Get-NetIPAddress | Where-Object { $_.InterfaceAlias.StartsWith("Ethernet") -and $_.AddressFamily -eq "IPv4" }
      #    $client = Get-DnsClient | Where-Object { $_.ConnectionSpecificSuffix }
      #    $hostname = hostname
      #    $suffix = $client.ConnectionSpecificSuffix
      #    "`r`n$($netip.IPAddress) $hostname.$suffix $hostname" | Add-Content -Path  "$($env:windir)\system32\Drivers\etc\hosts" -Encoding ascii
      #  shell: pwsh

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Run check-hostname.py
        run: python check-hostname.py

      - name: Run hostname check script
        run: |
          set -x
          echo "Hostname: $(hostname)"
          echo "Fully Qualified Domain Name: $(hostname -f)"
          echo "Pinging localhost..."
          ping -c 1 localhost
          echo "Pinging hostname..."
          ping -c 1 $(hostname)
          echo "Pinging FQDN..."
          ping -c 1 $(hostname -f)
        if: runner.os == 'macOS' && always()

      - name: Run hostname check script
        run: |
          set -x
          echo "Hostname: $(hostname)"
          echo "Fully Qualified Domain Name: $(hostname -f)"
          echo "Pinging localhost..."
          ping -c 1 localhost
          echo "Pinging hostname..."
          ping -c 1 $(hostname)
          echo "Pinging FQDN..."
          ping -c 1 $(hostname -f)
        if: runner.os == 'Linux' && always()

      - name: Run hostname check script
        run: |
          echo "Hostname: $env:COMPUTERNAME"
          echo "Fully Qualified Domain Name: $([System.Net.Dns]::GetHostEntry([System.Net.Dns]::GetHostName()).HostName)"
          echo "Pinging localhost..."
          ping -n 1 localhost
          echo "Pinging hostname..."
          ping -n 1 $env:COMPUTERNAME
          echo "Pinging FQDN..."
          $hostName = [System.Net.Dns]::GetHostEntry([System.Net.Dns]::GetHostName()).HostName
          ping -n 1 $hostName
        shell: pwsh
        if: runner.os == 'Windows' && always()

      - name: Run hostname check script
        run: |
          set -x
          echo "Hostname: $(hostname)"
          echo "Fully Qualified Domain Name: $(hostname -f)"
          echo "Pinging localhost..."
          ping -n 1 localhost
          echo "Pinging hostname..."
          ping -n 1 $(hostname)
          echo "Pinging FQDN..."
          ping -n 1 $(hostname -f)
        shell: bash
        if: runner.os == 'Windows' && always()
